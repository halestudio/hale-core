plugins {
  id 'hale.bom-conventions'
}

description = 'hale-core BOM'

javaPlatform {
  allowDependencies() // for including other BOMs
}

dependencies {
  constraints {
    // include all repository projects
    // Note: transitive dependencies are not included for a dependency

    rootProject.subprojects.each { p ->
      // add all projects except:
      // - root project
      // - this project
      // - allure project
      // - intermediate projects w/o build.gradle
      if (p != project && p.name != 'allure' && new File(p.projectDir, 'build.gradle').exists()) {
        api(p)
      }
    }

    // include all third party dependencies from version catalog
    def versionCatalog = rootProject.extensions.getByType(VersionCatalogsExtension).named("libs")
    versionCatalog.libraryAliases.each { alias ->
      api(versionCatalog.findLibrary(alias).get())
    }
  }

  /*
   * Other BOMs
   */

  // Groovy BOM
  api(platform("org.codehaus.groovy:groovy-bom:${libs.versions.groovy.get()}"))
}
