{"uid":"b2ec6bfb017c0d6b","name":"simpleSchemaTestECQL","fullName":"eu.esdihumboldt.hale.common.filter.FilterTest.simpleSchemaTestECQL","historyId":"bfa7188c3c22ec898f0151589415d428","time":{"start":1753282433957,"stop":1753282433970,"duration":13},"status":"broken","statusMessage":"class sun.net.www.protocol.file.FileURLConnection cannot be cast to class java.net.HttpURLConnection (sun.net.www.protocol.file.FileURLConnection and java.net.HttpURLConnection are in module java.base of loader 'bootstrap')","statusTrace":"java.lang.ClassCastException: class sun.net.www.protocol.file.FileURLConnection cannot be cast to class java.net.HttpURLConnection (sun.net.www.protocol.file.FileURLConnection and java.net.HttpURLConnection are in module java.base of loader 'bootstrap')\n\tat eu.esdihumboldt.hale.io.shp.reader.internal.ShapeInstanceReader.checkFileExistence(ShapeInstanceReader.java:458)\n\tat eu.esdihumboldt.hale.io.shp.reader.internal.ShapeInstanceReader.downloadShpFiles(ShapeInstanceReader.java:418)\n\tat eu.esdihumboldt.hale.io.shp.reader.internal.ShapeInstanceReader.execute(ShapeInstanceReader.java:109)\n\tat eu.esdihumboldt.hale.common.core.io.impl.AbstractIOProvider.execute(AbstractIOProvider.java:102)\n\tat eu.esdihumboldt.hale.common.core.io.impl.AbstractImportProvider.execute(AbstractImportProvider.java:69)\n\tat eu.esdihumboldt.hale.common.filter.FilterTest.validateSchemaAndInstanceReader(FilterTest.java:415)\n\tat eu.esdihumboldt.hale.common.filter.FilterTest.lambda$simpleSchemaTestECQL$1(FilterTest.java:341)\n\tat eu.esdihumboldt.util.io.IOUtils.withTemporaryExtractedZipResource(IOUtils.java:281)\n\tat eu.esdihumboldt.hale.common.filter.FilterTest.simpleSchemaTestECQL(FilterTest.java:336)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"filter"},{"name":"epic","value":"Common libraries"},{"name":"package","value":"eu.esdihumboldt.hale.common.filter"},{"name":"testClass","value":"eu.esdihumboldt.hale.common.filter.FilterTest"},{"name":"testMethod","value":"simpleSchemaTestECQL"},{"name":"suite","value":"eu.esdihumboldt.hale.common.filter.FilterTest"},{"name":"host","value":"pkrvmpptgkbjq6m"},{"name":"thread","value":"3067@pkrvmpptgkbjq6m.Test worker(1)"},{"name":"framework","value":"junit4"},{"name":"language","value":"java"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":156,"unknown":0,"total":157},"items":[{"uid":"e9b9d6689d573674","reportUrl":"https://halestudio.github.io/hale-core/247//#testresult/e9b9d6689d573674","status":"passed","time":{"start":1753110695816,"stop":1753110695868,"duration":52}},{"uid":"4f42c3ae8ac51faf","reportUrl":"https://halestudio.github.io/hale-core/242//#testresult/4f42c3ae8ac51faf","status":"passed","time":{"start":1753109173639,"stop":1753109173694,"duration":55}},{"uid":"258350d0b0103a3c","reportUrl":"https://halestudio.github.io/hale-core/241//#testresult/258350d0b0103a3c","status":"passed","time":{"start":1751271705584,"stop":1751271705648,"duration":64}},{"uid":"c3b057585fb607ff","reportUrl":"https://halestudio.github.io/hale-core/239//#testresult/c3b057585fb607ff","status":"passed","time":{"start":1751270342778,"stop":1751270342842,"duration":64}},{"uid":"bbbaedab6dcc2961","reportUrl":"https://halestudio.github.io/hale-core/238//#testresult/bbbaedab6dcc2961","status":"passed","time":{"start":1750769108819,"stop":1750769108894,"duration":75}},{"uid":"b00a5394fabb8e79","reportUrl":"https://halestudio.github.io/hale-core/237//#testresult/b00a5394fabb8e79","status":"passed","time":{"start":1750767863769,"stop":1750767863821,"duration":52}},{"uid":"620221f934c0b49e","reportUrl":"https://halestudio.github.io/hale-core/235//#testresult/620221f934c0b49e","status":"passed","time":{"start":1750766606187,"stop":1750766606241,"duration":54}},{"uid":"63b93fdbeeaa0a49","reportUrl":"https://halestudio.github.io/hale-core/234//#testresult/63b93fdbeeaa0a49","status":"passed","time":{"start":1750673574342,"stop":1750673574403,"duration":61}},{"uid":"411468afd8da0906","reportUrl":"https://halestudio.github.io/hale-core/230//#testresult/411468afd8da0906","status":"passed","time":{"start":1750672167453,"stop":1750672167509,"duration":56}},{"uid":"f610fe8a997ce964","reportUrl":"https://halestudio.github.io/hale-core/229//#testresult/f610fe8a997ce964","status":"passed","time":{"start":1749547627048,"stop":1749547627104,"duration":56}},{"uid":"c075f6f21f3b1af7","reportUrl":"https://halestudio.github.io/hale-core/225//#testresult/c075f6f21f3b1af7","status":"passed","time":{"start":1749546026669,"stop":1749546026727,"duration":58}},{"uid":"e3fca171def242c5","reportUrl":"https://halestudio.github.io/hale-core/224//#testresult/e3fca171def242c5","status":"passed","time":{"start":1748847616068,"stop":1748847616124,"duration":56}},{"uid":"b12653d4c55d716c","reportUrl":"https://halestudio.github.io/hale-core/221//#testresult/b12653d4c55d716c","status":"passed","time":{"start":1748846337773,"stop":1748846337825,"duration":52}},{"uid":"bd81f7c62ee9df75","reportUrl":"https://halestudio.github.io/hale-core/220//#testresult/bd81f7c62ee9df75","status":"passed","time":{"start":1748419463433,"stop":1748419463490,"duration":57}},{"uid":"2d5d5756e12f9e16","reportUrl":"https://halestudio.github.io/hale-core/219//#testresult/2d5d5756e12f9e16","status":"passed","time":{"start":1748418188415,"stop":1748418188469,"duration":54}},{"uid":"23306b820780534f","reportUrl":"https://halestudio.github.io/hale-core/218//#testresult/23306b820780534f","status":"passed","time":{"start":1748249510062,"stop":1748249510115,"duration":53}},{"uid":"8c640a71f5e8bba","reportUrl":"https://halestudio.github.io/hale-core/217//#testresult/8c640a71f5e8bba","status":"passed","time":{"start":1747981267055,"stop":1747981267115,"duration":60}},{"uid":"e52ee80752520aa3","reportUrl":"https://halestudio.github.io/hale-core/216//#testresult/e52ee80752520aa3","status":"passed","time":{"start":1747637086404,"stop":1747637086454,"duration":50}},{"uid":"f0b8b61de18cd72b","reportUrl":"https://halestudio.github.io/hale-core/214//#testresult/f0b8b61de18cd72b","status":"passed","time":{"start":1747635743019,"stop":1747635743073,"duration":54}},{"uid":"2c17774dcff53756","reportUrl":"https://halestudio.github.io/hale-core/213//#testresult/2c17774dcff53756","status":"passed","time":{"start":1747127534151,"stop":1747127534203,"duration":52}}]},"tags":[]},"source":"b2ec6bfb017c0d6b.json","parameterValues":[]}